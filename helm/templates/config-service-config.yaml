apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.configServiceConfig.name }}
  labels:
    release: {{ .Release.Name }}
data:
  application.conf: |-
    service.port = {{ .Values.containerPort }}
    service.admin.port = {{ .Values.containerAdminPort }}

    generic.config.service {
      document.store {
        {{- $dst := .Values.configServiceConfig.dataStoreType }}
        dataStoreType = {{ $dst }}
        {{ $dst }} {
          {{- range $key, $value := (index .Values "configServiceConfig" (printf "%s" $dst)) }}
          {{- if $value }}
          {{ $key }} = {{ $value | quote }}
          {{- end }}
          {{- end }}
        }
      }
      publish.change.events = {{ .Values.configServiceConfig.publishChangeEvents }}
      maxLabelApplicationRulesPerTenant = {{ .Values.configServiceConfig.maxLabelApplicationRulesPerTenant }}
    }
    event.store {
      type = kafka
      bootstrap.servers = "bootstrap:9092"
      config.change.events.producer {
        bootstrap.servers = "bootstrap:9092"
        schema.registry.url = "http://schema-registry-service:8081"
      }
    }
